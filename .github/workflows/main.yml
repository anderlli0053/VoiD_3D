name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  build:
    name: Build my project âœ¨
    runs-on: windows-2022
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v2

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          allowDirtyBuild: true

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          
      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
          allowDirtyBuild: true
          
      #Output pre 1        
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results
          #path: ${{ steps.tests.outputs.artifactsPath }}
          path: /artifacts
          allowDirtyBuild: true


      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          allowDirtyBuild: true

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true

      # Output
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Build
          path: artifacts
          allowDirtyBuild: true


      # Output2
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build
          path: artifacts/
          allowDirtyBuild: true
